import io
from reportlab.lib.pagesizes import letter, A4
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.units import inch
from reportlab.lib.colors import black
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
from datetime import datetime

def generate_pdf(letter_data):
    """
    Generate PDF from letter content
    """
    buffer = io.BytesIO()
    
    # Create the PDF document
    doc = SimpleDocDocument(buffer, pagesize=A4)
    
    # Get styles
    styles = getSampleStyleSheet()
    
    # Custom styles
    title_style = ParagraphStyle(
        'CustomTitle',
        parent=styles['Heading1'],
        fontSize=16,
        spaceAfter=30,
        alignment=1,  # Center alignment
        textColor=black
    )
    
    normal_style = ParagraphStyle(
        'CustomNormal',
        parent=styles['Normal'],
        fontSize=11,
        spaceAfter=12,
        leading=14,
        textColor=black
    )
    
    header_style = ParagraphStyle(
        'CustomHeader',
        parent=styles['Normal'],
        fontSize=10,
        spaceAfter=20,
        alignment=2,  # Right alignment
        textColor=black
    )
    
    # Build the PDF content
    story = []
    
    # Header with generation info
    header_text = f"Generated by Typemitr | {datetime.now().strftime('%B %d, %Y')}"
    story.append(Paragraph(header_text, header_style))
    
    # Title
    document_type = letter_data.get('document_type', 'Document')
    story.append(Paragraph(document_type, title_style))
    story.append(Spacer(1, 12))
    
    # Content
    content = letter_data.get('content', '')
    
    # Split content into paragraphs and process
    paragraphs = content.split('\n\n')
    
    for para in paragraphs:
        if para.strip():
            # Clean up the paragraph
            clean_para = para.strip().replace('\n', '<br/>')
            story.append(Paragraph(clean_para, normal_style))
            story.append(Spacer(1, 6))
    
    # Footer
    story.append(Spacer(1, 30))
    footer_style = ParagraphStyle(
        'Footer',
        parent=styles['Normal'],
        fontSize=8,
        alignment=1,  # Center alignment
        textColor=black
    )
    
    footer_text = "Generated by Typemitr - AI-Powered Letter Generator<br/>Made by Atish Gulhane"
    story.append(Paragraph(footer_text, footer_style))
    
    # Build PDF
    doc.build(story)
    
    # Get the value of the BytesIO buffer and return it
    buffer.seek(0)
    return buffer

class SimpleDocDocument(SimpleDocTemplate):
    """
    Custom document class for better formatting
    """
    def __init__(self, filename, **kw):
        super().__init__(filename, **kw)
        
        # Set margins
        self.leftMargin = 0.75 * inch
        self.rightMargin = 0.75 * inch
        self.topMargin = 1 * inch
        self.bottomMargin = 1 * inch
